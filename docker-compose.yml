version: "3"

networks:
  app-tier:
    driver: bridge

services:
  zookeeper:
    image: "bitnami/zookeeper:3.7"
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - app-tier
    logging:
      driver: none

  kafka:
    image: "bitnami/kafka:2"
    logging:
      driver: none
    ports:
      - "9093:9093"
    environment:
      - KAFKA_BROKER_ID=1
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    networks:
      - app-tier

  redpanda:
    command:
      - redpanda
      - start
      - --smp
      - "1"
      - --reserve-memory
      - 0M
      - --overprovisioned
      - --node-id
      - "0"
      - --kafka-addr
      - PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      - --advertise-kafka-addr
      - PLAINTEXT://redpanda:29092,OUTSIDE://localhost:9092
    image: docker.vectorized.io/vectorized/redpanda:v21.9.5
    ports:
      - 9092:9092
      - 29092:29092
  
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - app-tier

  art-blocks-stream:
    build:
      context: ./
      dockerfile: ./datasets/art-blocks-stream/kafka/Dockerfile
    entrypoint: ["python3", "produce.py"]
    environment:
      KAFKA_IP: kafka
      KAFKA_PORT: "9092"
      KAFKA_TOPIC: "sales"
      REDPANDA_IP: redpanda
      REDPANDA_PORT: "29092"
      REDPANDA_TOPIC: "sales"
    depends_on:
      - kafka
    networks:
      - app-tier

  art-blocks-stream-rabbit:
    build:
      context: ./
      dockerfile: ./datasets/art-blocks-stream/rabbitmq/Dockerfile
    entrypoint: ["python3", "produce.py"]
    environment:
      RABBITMQ_IP: rabbitmq
      RABBITMQ_PORT: "5672"
      RABBITMQ_QUEUE: "sales"
    depends_on:
      - rabbitmq
    networks:
      - app-tier

  github-stream:
    build:
      context: ./
      dockerfile: ./datasets/github-stream/kafka/Dockerfile
    entrypoint: ["python3", "produce.py"]
    environment:
      KAFKA_IP: kafka
      KAFKA_PORT: "9092"
      KAFKA_TOPIC: "github"
      REDPANDA_IP: redpanda
      REDPANDA_PORT: "29092"
      REDPANDA_TOPIC: "github"
    depends_on:
      - kafka
    networks:
      - app-tier

  github-stream-rabbit:
    build:
      context: ./
      dockerfile: ./datasets/github-stream/rabbitmq/Dockerfile
    entrypoint: ["python3", "produce.py"]
    environment:
      RABBITMQ_IP: rabbitmq
      RABBITMQ_PORT: "5672"
      RABBITMQ_QUEUE: "github"
    depends_on:
      - rabbitmq
    networks:
      - app-tier
version: "3"

networks:
  app-tier:
    driver: bridge

services:
  memgraph-mage:
    build: ./memgraph
    ports:
      - '7687:7687'
    volumes:
      - ./memgraph/import-data:/usr/lib/memgraph/import-data
    entrypoint: [
      "/usr/lib/memgraph/memgraph",
      "--telemetry-enabled=false",
      "--kafka-bootstrap-servers=kafka:9092",
      "--query-modules-directory=/transformations",
      "--log-level=TRACE"]
    networks:
      - app-tier

  zookeeper:
    image: "bitnami/zookeeper:3.7"
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - app-tier
    logging:
      driver: none

  kafka:
    image: "bitnami/kafka:2"
    logging:
      driver: none
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      - KAFKA_BROKER_ID=1
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://54.217.170.100:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    networks:
      - app-tier

  redpanda:
    command:
      - redpanda
      - start
      - --smp
      - "1"
      - --reserve-memory
      - 0M
      - --overprovisioned
      - --node-id
      - "0"
      - --kafka-addr
      - PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9094
      - --advertise-kafka-addr
      - PLAINTEXT://redpanda:29092,OUTSIDE://0.0.0.0:9094
    image: docker.vectorized.io/vectorized/redpanda:v21.9.5
    ports:
      - 9094:9094
      - 29092:29092
    networks:
      - app-tier

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - app-tier

  pulsar:
    image: apachepulsar/pulsar:2.6.0
    ports:
      - 8080:8080
      - 6650:6650
    environment:
      PULSAR_MEM: " -Xms512m -Xmx512m -XX:MaxDirectMemorySize=1g"
    command: bin/pulsar standalone
    networks:
      - app-tier

  core:
    image: tianon/true
    restart: "no"
    depends_on:
      - kafka
      - redpanda
      - pulsar
      - rabbitmq

  art-blocks:
    build:
      context: ./
      dockerfile: ./datasets/art-blocks/Dockerfile
    entrypoint: [ "python3", "produce.py" ]
    env_file: platform_variables.env
    environment:
      KAFKA_TOPIC: "sales"
      REDPANDA_TOPIC: "sales"
      RABBITMQ_QUEUE: "sales"
      PULSAR_TOPIC: "sales"
    networks:
      - app-tier

  github:
    build:
      context: ./
      dockerfile: ./datasets/github/Dockerfile
    entrypoint: [ "python3", "produce.py" ]
    env_file: platform_variables.env
    environment:
      KAFKA_TOPIC: "github"
      REDPANDA_TOPIC: "github"
      RABBITMQ_QUEUE: "github"
      PULSAR_TOPIC: "github"
    networks:
      - app-tier

  movielens:
    build:
      context: ./
      dockerfile: ./datasets/movielens/Dockerfile
    entrypoint: ["python3", "produce.py"]
    env_file:
      platform_variables.env
    environment:
      KAFKA_TOPIC: "ratings"
      REDPANDA_TOPIC: "ratings"
      RABBITMQ_QUEUE: "ratings"
      PULSAR_TOPIC: "ratings"
    networks:
      - app-tier

  art-blocks-analysis:
    build:
      context: ./
      dockerfile: ./data-analysis/Dockerfile
    entrypoint: [ "python3", "art-blocks-analysis.py" ]
    env_file: platform_variables.env
    environment:
      KAFKA_TOPIC: "sales"
      REDPANDA_TOPIC: "sales"
      RABBITMQ_QUEUE: "sales"
      PULSAR_TOPIC: "sales"
    networks:
      - app-tier

  art-blocks-memgraph:
    build:
      context: ./
      dockerfile: ./data-analysis/Dockerfile
    entrypoint: [ "python3", "art-blocks-memgraph.py" ]
    environment:
      MEMGRAPH_IP: memgraph-mage
      MEMGRAPH_PORT: "7687"
    depends_on:
      - memgraph-mage
    networks:
      - app-tier

  github-analysis:
    build:
      context: ./
      dockerfile: ./data-analysis/Dockerfile
    entrypoint: [ "python3", "github-analysis.py" ]
    env_file: platform_variables.env
    environment:
      KAFKA_TOPIC: "github"
      REDPANDA_TOPIC: "github"
      RABBITMQ_QUEUE: "github"
      PULSAR_TOPIC: "github"
    networks:
      - app-tier

  movielens-memgraph:
    build:
      context: ./
      dockerfile: ./data-analysis/Dockerfile
    entrypoint: [ "python3", "movielens-memgraph.py" ]
    environment:
      MEMGRAPH_IP: memgraph-mage
      MEMGRAPH_PORT: "7687"
    depends_on:
      - memgraph-mage
    networks:
      - app-tier